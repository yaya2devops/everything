"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ExampleListener = void 0;
/**
 * Listener
 *
 * Responsible for mapping events to perform actions on the service/provider layer.
 * - "Like a Controller, but for Events not HTTP Requests"
 */
const handle_event_decorator_1 = require("../common/decorators/handle-event.decorator");
const common_1 = require("@nestjs/common");
const example_event_1 = require("../core/example/example.event");
let ExampleListener = class ExampleListener {
    logger;
    constructor(logger) {
        this.logger = logger;
    }
    async logEvents(event) {
        this.logger.info(`Received an event with a message: ${event.data.message}`);
    }
};
exports.ExampleListener = ExampleListener;
__decorate([
    (0, handle_event_decorator_1.OnEvent)(example_event_1.ExampleEvent),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [example_event_1.ExampleEvent]),
    __metadata("design:returntype", Promise)
], ExampleListener.prototype, "logEvents", null);
exports.ExampleListener = ExampleListener = __decorate([
    __param(0, (0, common_1.Inject)('logger')),
    __metadata("design:paramtypes", [Object])
], ExampleListener);
//# sourceMappingURL=example.listener.js.map