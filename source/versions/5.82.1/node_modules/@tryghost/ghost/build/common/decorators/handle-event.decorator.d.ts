import { NestApplication } from '@nestjs/core';
interface IEvent<T> {
    data: T;
    timestamp: Date;
}
interface IDomainEvents {
    subscribe<T>(event: new (data: T, timestamp: Date) => IEvent<T>, fn: (_event: IEvent<T>) => void): void;
    dispatch<T>(event: IEvent<T>): void;
}
export declare function OnEvent<T>(Event: new (data: T, timestamp: Date) => IEvent<T>): (target: object, methodName: string) => void;
export declare function registerEvents(app: NestApplication, DomainEvents: IDomainEvents): void;
export {};
