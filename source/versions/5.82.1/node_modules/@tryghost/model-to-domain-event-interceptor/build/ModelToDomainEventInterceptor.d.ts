type ModelToDomainEventInterceptorDeps = {
    ModelEvents: {
        hasRegisteredListener: (event: any, listenerName: string) => boolean;
        on: (eventName: string, callback: (data: any) => void) => void;
    };
    DomainEvents: {
        dispatch: (event: any) => void;
    };
};
export declare class ModelToDomainEventInterceptor {
    ModelEvents: {
        hasRegisteredListener: (event: any, listenerName: string) => boolean;
        on: (eventName: string, callback: (data: any) => void) => void;
    };
    DomainEvents: {
        dispatch: (event: any) => void;
    };
    constructor(deps: ModelToDomainEventInterceptorDeps);
    init(): void;
    domainEventDispatcher(modelEventName: string, data: any): void;
}
export {};
