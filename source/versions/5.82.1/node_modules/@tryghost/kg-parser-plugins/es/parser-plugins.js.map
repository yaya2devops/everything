{"version":3,"file":"parser-plugins.js","sources":["../lib/cards/audio.js","../lib/cards/button.js","../lib/helpers.js","../lib/cards/embed.js","../lib/cards/file.js","../lib/cards/header.js","../lib/cards/html.js","../lib/cards/image.js","../lib/cards/product.js","../lib/cards/softReturn.js","../lib/cards/video.js","../lib/cards/gallery.js","../lib/parser-plugins.js"],"sourcesContent":["export function fromKoenigCard() {\n    return function kgAudioCardToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || !node.classList.contains('kg-audio-card')) {\n            return;\n        }\n\n        const titleNode = node.querySelector('.kg-audio-title');\n        const audioNode = node.querySelector('.kg-audio-player-container audio');\n        const thumbnailNode = node.querySelector('.kg-audio-thumbnail');\n        const durationNode = node.querySelector('.kg-audio-duration');\n        const title = titleNode && titleNode.innerHTML.trim();\n        const audioSrc = audioNode && audioNode.src;\n        const thumbnailSrc = thumbnailNode && thumbnailNode.src;\n        const durationText = durationNode && durationNode.innerHTML.trim();\n\n        if (!audioSrc) {\n            return;\n        }\n\n        const payload = {\n            src: audioSrc,\n            title: title\n        };\n        if (thumbnailSrc) {\n            payload.thumbnailSrc = thumbnailSrc;\n        }\n\n        if (durationText) {\n            const {minutes, seconds} = durationText.split(':');\n            try {\n                payload.duration = parseInt(minutes) * 60 + parseInt(seconds);\n            } catch (e) {\n                // ignore duration\n            }\n        }\n\n        const cardSection = builder.createCardSection('audio', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n","function getButtonText(node) {\n    let buttonText = node.textContent;\n    if (buttonText) {\n        buttonText = buttonText.replace(/\\n/g, ' ').replace(/\\s+/g, ' ').trim();\n    }\n    return buttonText;\n}\n\nexport function fromKoenigCard() {\n    return function kgButtonCardToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || !node.classList.contains('kg-button-card')) {\n            return;\n        }\n\n        const alignment = node.classList.contains('kg-align-center') ? 'center' : 'left';\n\n        const anchor = node.querySelector('a');\n\n        const buttonUrl = anchor.href;\n        const buttonText = getButtonText(anchor);\n\n        if (!buttonUrl || !buttonText) {\n            return;\n        }\n\n        const payload = {\n            alignment,\n            buttonUrl,\n            buttonText\n        };\n\n        const cardSection = builder.createCardSection('button', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n\nexport function fromWordpressButton() {\n    return function wordpressButtonToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || !node.classList.contains('wp-block-button__link')) {\n            return;\n        }\n\n        const buttonUrl = node.href;\n        const buttonText = getButtonText(node);\n\n        if (!buttonUrl || !buttonText) {\n            return;\n        }\n\n        let alignment = 'left';\n\n        if (node.closest('.is-content-justification-center, .is-content-justification-right')) {\n            alignment = 'center';\n        }\n\n        const payload = {\n            alignment,\n            buttonUrl,\n            buttonText\n        };\n\n        const cardSection = builder.createCardSection('button', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n\nexport function fromSubstackButton() {\n    return function substackButtonToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || !node.classList.contains('button')) {\n            return;\n        }\n\n        // substack has .button-wrapper elems with a data-attrs JSON object with `url` and `text`\n        // we're not using that in favour of grabbing the anchor element directly for simplicity\n\n        const anchor = node.tagName === 'A' ? node : node.querySelector('a');\n\n        if (!anchor) {\n            return;\n        }\n\n        const buttonUrl = anchor.href;\n        const buttonText = getButtonText(anchor);\n\n        if (!buttonUrl || !buttonText) {\n            return;\n        }\n\n        const payload = {\n            alignment: 'center', // all Substack buttons are centered\n            buttonUrl,\n            buttonText\n        };\n\n        const cardSection = builder.createCardSection('button', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n","export function addFigCaptionToPayload(node, payload, {selector = 'figcaption', options}) {\n    let figcaptions = Array.from(node.querySelectorAll(selector));\n\n    if (figcaptions.length) {\n        figcaptions.forEach((caption) => {\n            let cleanHtml = options.cleanBasicHtml(caption.innerHTML);\n            payload.caption = payload.caption ? `${payload.caption} / ${cleanHtml}` : cleanHtml;\n            caption.remove(); // cleanup this processed element\n        });\n    }\n}\n\nexport function readImageAttributesFromNode(node) {\n    const attrs = {};\n\n    if (node.src) {\n        attrs.src = node.src;\n    }\n\n    if (node.width) {\n        attrs.width = node.width;\n    } else if (node.dataset && node.dataset.width) {\n        attrs.width = parseInt(node.dataset.width, 10);\n    }\n\n    if (node.height) {\n        attrs.height = node.height;\n    } else if (node.dataset && node.dataset.height) {\n        attrs.height = parseInt(node.dataset.height, 10);\n    }\n\n    if ((!node.width && !node.height) && node.getAttribute('data-image-dimensions')) {\n        const [, width, height] = (/^(\\d*)x(\\d*)$/gi).exec(node.getAttribute('data-image-dimensions'));\n        attrs.width = parseInt(width, 10);\n        attrs.height = parseInt(height, 10);\n    }\n\n    if (node.alt) {\n        attrs.alt = node.alt;\n    }\n\n    if (node.title) {\n        attrs.title = node.title;\n    }\n\n    if (node.parentNode.tagName === 'A') {\n        const href = node.parentNode.href;\n\n        if (href !== attrs.src) {\n            attrs.href = href;\n        }\n    }\n\n    return attrs;\n}\n","import {addFigCaptionToPayload} from '../helpers';\n\n// Helpers\n\nfunction _createPayloadForIframe(iframe) {\n    // If we don't have a src Or it's not an absolute URL, we can't handle this\n    // This regex handles http://, https:// or //\n    if (!iframe.src || !iframe.src.match(/^(https?:)?\\/\\//i)) {\n        return;\n    }\n\n    // if it's a schemaless URL, convert to https\n    if (iframe.src.match(/^\\/\\//)) {\n        iframe.src = `https:${iframe.src}`;\n    }\n\n    let payload = {\n        url: iframe.src\n    };\n\n    payload.html = iframe.outerHTML;\n\n    return payload;\n}\n\n// Plugins\n\nexport function fromMixtape(options) {\n    return function mixtapeEmbed(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || node.tagName !== 'DIV' || !node.className.match(/graf--mixtapeEmbed/)) {\n            return;\n        }\n\n        // Grab the relevant elements - Anchor wraps most of the data\n        let anchorElement = node.querySelector('.markup--mixtapeEmbed-anchor');\n        let titleElement = anchorElement.querySelector('.markup--mixtapeEmbed-strong');\n        let descElement = anchorElement.querySelector('.markup--mixtapeEmbed-em');\n        // Image is a top level field inside it's own a tag\n        let imgElement = node.querySelector('.mixtapeImage');\n\n        // Grab individual values from the elements\n        let url = anchorElement.href;\n        let title = '';\n        let description = '';\n\n        if (titleElement && titleElement.innerHTML) {\n            title = options.cleanBasicHtml(titleElement.innerHTML);\n            // Cleanup anchor so we can see what's left now that we've processed title\n            anchorElement.removeChild(titleElement);\n        }\n\n        if (descElement && descElement.innerHTML) {\n            description = options.cleanBasicHtml(descElement.innerHTML);\n            // Cleanup anchor so we can see what's left now that we've processed description\n            anchorElement.removeChild(descElement);\n        }\n\n        // // Format our preferred structure.\n        let metadata = {\n            url,\n            title,\n            description\n        };\n\n        // Publisher is the remaining text in the anchor, once title & desc are removed\n        let publisher = options.cleanBasicHtml(anchorElement.innerHTML);\n        if (publisher) {\n            metadata.publisher = publisher;\n        }\n\n        // Image is optional,\n        // The element usually still exists with an additional has.mixtapeImage--empty class and has no background image\n        if (imgElement && imgElement.style['background-image']) {\n            metadata.thumbnail = imgElement.style['background-image'].match(/url\\(([^)]*?)\\)/)[1];\n        }\n\n        let payload = {url, metadata};\n        let cardSection = builder.createCardSection('bookmark', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n\nexport function fromFigureIframe(options) {\n    return function figureIframeToEmbed(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || node.tagName !== 'FIGURE') {\n            return;\n        }\n\n        let iframe = node.querySelector('iframe');\n\n        if (!iframe) {\n            return;\n        }\n\n        let payload = _createPayloadForIframe(iframe);\n\n        if (!payload) {\n            return;\n        }\n\n        addFigCaptionToPayload(node, payload, {options});\n\n        let cardSection = builder.createCardSection('embed', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n\nexport function fromIframe() {\n    return function iframeToEmbedCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || node.tagName !== 'IFRAME') {\n            return;\n        }\n\n        let payload = _createPayloadForIframe(node);\n\n        if (!payload) {\n            return;\n        }\n\n        let cardSection = builder.createCardSection('embed', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n\nexport function fromFigureBlockquote(options) {\n    return function figureBlockquoteToEmbedCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || node.tagName !== 'FIGURE') {\n            return;\n        }\n\n        let blockquote = node.querySelector('blockquote');\n        let link = node.querySelector('a');\n\n        if (!blockquote || !link) {\n            return;\n        }\n\n        let url = link.href;\n\n        // If we don't have a url, or it's not an absolute URL, we can't handle this\n        if (!url || !url.match(/^https?:\\/\\//i)) {\n            return;\n        }\n\n        let payload = {\n            url: url\n        };\n\n        addFigCaptionToPayload(node, payload, {options});\n\n        payload.html = node.innerHTML;\n\n        let cardSection = builder.createCardSection('embed', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n\nexport function fromNFTEmbed() {\n    return function fromNFTEmbedToEmbedCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || (node.tagName !== 'FIGURE' && node.tagName !== 'NFT-CARD' && node.tagName !== 'DIV')) {\n            return;\n        }\n\n        // Attempt to parse Ghost NFT Card\n        if (node.tagName === 'FIGURE') {\n            if (!node.classList.contains('kg-nft-card')) {\n                return;\n            }\n            let nftCard = node.querySelector('a');\n\n            if (!nftCard) {\n                return;\n            }\n\n            let payload;\n            try {\n                payload = JSON.parse(decodeURIComponent(nftCard.dataset.payload));\n            } catch (err) {\n                return nodeFinished();\n            }\n\n            let cardSection = builder.createCardSection('embed', payload);\n            addSection(cardSection);\n            return nodeFinished();\n        }\n\n        // Attempt to parse Substack NFT Card\n        if (node.tagName === 'DIV') {\n            if (!node.classList.contains('opensea')) {\n                return;\n            }\n\n            let url = node.querySelector('a');\n            let [match, contractAddress, tokenId] = url.href.match(/\\/assets\\/(0x[0-9a-f]+)\\/(\\d+)/);\n\n            if (!match) {\n                return;\n            }\n\n            let payload = {\n                url: url.href,\n                html: `<nft-card contractAddress=\"${contractAddress}\" tokenId=\"${tokenId}\"></nft-card><script src=\"https://unpkg.com/embeddable-nfts/dist/nft-card.min.js\"></script>`\n            };\n            let cardSection = builder.createCardSection('embed', payload);\n            addSection(cardSection);\n            return nodeFinished();\n        }\n\n        if (node.tagName === 'NFT-CARD') {\n            let attr = node.attributes;\n            let contractAddress = (attr.contractAddress || attr.contractaddress || attr.tokenaddress || attr.contractaddress).value;\n            let tokenId = (attr.tokenId || attr.tokenid).value;\n            if (!contractAddress || !tokenId) {\n                return;\n            }\n            let payload = {\n                url: `https://opensea.io/assets/${contractAddress}/${tokenId}/`,\n                html: `<nft-card contractAddress=\"${contractAddress}\" tokenId=\"${tokenId}\"></nft-card><script src=\"https://unpkg.com/embeddable-nfts/dist/nft-card.min.js\"></script>`\n            };\n            let cardSection = builder.createCardSection('embed', payload);\n            addSection(cardSection);\n            return nodeFinished();\n        }\n    };\n}\n","function transformSizeToBytes(sizeStr = '') {\n    if (!sizeStr) {\n        return 0;\n    }\n    const [sizeVal, sizeType] = sizeStr.split(' ');\n    if (!sizeVal || !sizeType) {\n        return 0;\n    }\n    if (sizeType === 'Bytes') {\n        return Number(sizeVal);\n    } else if (sizeType === 'KB') {\n        return Number(sizeVal) * 2048;\n    } else if (sizeType === 'MB') {\n        return Number(sizeVal) * 2048 * 2048;\n    }\n}\n\nexport function fromKoenigCard() {\n    return function kgFileCardToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || !node.classList.contains('kg-file-card')) {\n            return;\n        }\n\n        const titleNode = node.querySelector('.kg-file-card-title');\n        const captionNode = node.querySelector('.kg-file-card-caption');\n        const fileNameNode = node.querySelector('.kg-file-card-filename');\n        const fileSizeNode = node.querySelector('.kg-file-card-filesize');\n        const fileCardLinkNode = node.querySelector('.kg-file-card-container');\n        const title = titleNode && titleNode.innerHTML.trim();\n        const caption = captionNode && captionNode.innerHTML.trim();\n        const fileName = fileNameNode && fileNameNode.innerHTML.trim();\n        const fileSizeStr = fileSizeNode && fileSizeNode.innerHTML.trim();\n        const fileSrc = fileCardLinkNode && fileCardLinkNode.href;\n\n        if (!fileSrc) {\n            return;\n        }\n\n        const payload = {\n            src: fileSrc,\n            fileTitle: title,\n            fileCaption: caption,\n            fileSize: transformSizeToBytes(fileSizeStr),\n            fileName: fileName\n        };\n\n        const cardSection = builder.createCardSection('file', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n","export function fromKoenigCard() {\n    return function kgHeaderCardToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || !node.classList.contains('kg-header-card')) {\n            return;\n        }\n\n        const headerNode = node.querySelector('.kg-header-card-header');\n        const subheaderNode = node.querySelector('.kg-header-card-subheader');\n        const buttonNode = node.querySelector('.kg-header-card-button');\n\n        let header = '';\n        let subheader = '';\n        let buttonText = '';\n        let buttonUrl = '';\n\n        if (headerNode) {\n            header = headerNode.innerHTML.trim();\n        }\n        if (subheaderNode) {\n            subheader = subheaderNode.innerHTML.trim();\n        }\n\n        if (buttonNode) {\n            buttonText = buttonNode.textContent.trim();\n            buttonUrl = buttonNode.getAttribute('href').trim();\n        }\n\n        if (!header && !subheader && (!buttonNode || !buttonText || !buttonUrl)) {\n            return;\n        }\n\n        const classes = [...node.classList];\n        let backgroundImageSrc = '';\n        if (node.getAttribute('data-kg-background-image')) {\n            backgroundImageSrc = node.getAttribute('data-kg-background-image').trim();\n        }\n\n        const payload = {\n            header,\n            subheader,\n            buttonEnabled: Boolean(buttonNode),\n            buttonText,\n            buttonUrl,\n            backgroundImageSrc,\n            size: 'small',\n            style: 'dark'\n        };\n\n        const sizeClass = classes.find(c => /^kg-size-(small|medium|large)$/.test(c));\n        const styleClass = classes.find(c => /^kg-style-(dark|light|accent|image)$/.test(c));\n        if (sizeClass) {\n            payload.size = sizeClass.replace('kg-size-', '');\n        }\n        if (styleClass) {\n            payload.style = styleClass.replace('kg-style-', '');\n        }\n\n        const cardSection = builder.createCardSection('header', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n","// https://github.com/TryGhost/Koenig/issues/1\n// allows arbitrary HTML blocks wrapped in our card comments to be extracted\n// into a HTML card rather than being put through the normal parse+plugins\nexport function fromKoenigCard() {\n    return function kgHtmlCardToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 8 || node.nodeValue !== 'kg-card-begin: html') {\n            return;\n        }\n\n        let html = [];\n\n        function isHtmlEndComment(n) {\n            return n && n.nodeType === 8 && n.nodeValue === 'kg-card-end: html';\n        }\n\n        let nextNode = node.nextSibling;\n        while (nextNode && !isHtmlEndComment(nextNode)) {\n            let currentNode = nextNode;\n            html.push(currentNode.outerHTML);\n            nextNode = currentNode.nextSibling;\n            // remove nodes as we go so that they don't go through the parser\n            currentNode.remove();\n        }\n\n        let payload = {html: html.join('\\n').trim()};\n        let cardSection = builder.createCardSection('html', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n","import {addFigCaptionToPayload, readImageAttributesFromNode} from '../helpers';\n\nexport function fromImg() {\n    return function imgToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || node.tagName !== 'IMG') {\n            return;\n        }\n\n        const payload = readImageAttributesFromNode(node);\n\n        const cardSection = builder.createCardSection('image', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n\nexport function fromFigure(options) {\n    return function figureImgToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || node.tagName !== 'FIGURE') {\n            return;\n        }\n\n        const img = node.querySelector('img');\n        const kgClass = node.className.match(/kg-width-(wide|full)/);\n        const grafClass = node.className.match(/graf--layout(FillWidth|OutsetCenter)/);\n\n        if (!img) {\n            return;\n        }\n\n        const payload = readImageAttributesFromNode(img);\n\n        if (kgClass) {\n            payload.cardWidth = kgClass[1];\n        } else if (grafClass) {\n            payload.cardWidth = grafClass[1] === 'FillWidth' ? 'full' : 'wide';\n        }\n\n        addFigCaptionToPayload(node, payload, {options});\n\n        let cardSection = builder.createCardSection('image', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n","function getButtonText(node) {\n    let buttonText = node.textContent;\n    if (buttonText) {\n        buttonText = buttonText.replace(/\\n/g, ' ').replace(/\\s+/g, ' ').trim();\n    }\n    return buttonText;\n}\n\nexport function fromKoenigCard() {\n    return function kgButtonCardToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || !node.classList.contains('kg-product-card')) {\n            return;\n        }\n\n        const titleNode = node.querySelector('.kg-product-card-title');\n        const descriptionNode = node.querySelector('.kg-product-card-description');\n        const title = titleNode && titleNode.innerHTML.trim();\n        const description = descriptionNode && descriptionNode.innerHTML.trim();\n\n        if (!title && !description) {\n            return;\n        }\n\n        const payload = {\n            productButtonEnabled: false,\n            productRatingEnabled: false,\n\n            productTitle: title,\n            productDescription: description\n        };\n\n        const img = node.querySelector('.kg-product-card-image');\n        if (img && img.getAttribute('src')) {\n            payload.productImageSrc = img.getAttribute('src');\n        }\n\n        const stars = [...node.querySelectorAll('.kg-product-card-rating-active')].length;\n        if (stars) {\n            payload.productRatingEnabled = true;\n            payload.productStarRating = stars;\n        }\n\n        const button = node.querySelector('a');\n\n        if (button) {\n            const buttonUrl = button.href;\n            const buttonText = getButtonText(button);\n\n            if (buttonUrl && buttonText) {\n                payload.productButtonEnabled = true;\n                payload.productButton = buttonText;\n                payload.productUrl = buttonUrl;\n            }\n        }\n\n        const cardSection = builder.createCardSection('product', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n","export function fromBr() {\n    // mobiledoc by default ignores <BR> tags but we have a custom SoftReturn atom\n    return function fromBrToSoftReturnAtom(node, builder, {addMarkerable, nodeFinished}) {\n        if (node.nodeType !== 1 || node.tagName !== 'BR') {\n            return;\n        }\n\n        let softReturn = builder.createAtom('soft-return');\n        addMarkerable(softReturn);\n\n        nodeFinished();\n    };\n}\n","export function fromKoenigCard() {\n    return function kgVideoCardToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || !node.classList.contains('kg-video-card')) {\n            return;\n        }\n\n        const videoNode = node.querySelector('.kg-video-player-container video');\n        const durationNode = node.querySelector('.kg-video-duration');\n        const videoSrc = videoNode && videoNode.src;\n        const durationText = durationNode && durationNode.innerHTML.trim();\n\n        if (!videoSrc) {\n            return;\n        }\n\n        const payload = {\n            src: videoSrc,\n            loop: !!videoNode.loop\n        };\n\n        if (durationText) {\n            const {minutes, seconds} = durationText.split(':');\n            try {\n                payload.duration = parseInt(minutes) * 60 + parseInt(seconds);\n            } catch (e) {\n                // ignore duration\n            }\n        }\n\n        const cardSection = builder.createCardSection('video', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n","import {addFigCaptionToPayload, readImageAttributesFromNode} from '../helpers';\n\nfunction readGalleryImageAttributesFromNode(node, imgNum) {\n    const image = readImageAttributesFromNode(node);\n\n    image.fileName = node.src.match(/[^/]*$/)[0];\n    image.row = Math.floor(imgNum / 3);\n\n    return image;\n}\n\nexport function fromKoenigCard(options) {\n    return function kgGalleryCardToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || node.tagName !== 'FIGURE') {\n            return;\n        }\n\n        if (!node.className.match(/kg-gallery-card/)) {\n            return;\n        }\n\n        let payload = {};\n        let imgs = Array.from(node.querySelectorAll('img'));\n\n        // Process nodes into the payload\n        payload.images = imgs.map(readGalleryImageAttributesFromNode);\n\n        addFigCaptionToPayload(node, payload, {options});\n\n        let cardSection = builder.createCardSection('gallery', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n\nexport function fromGrafGallery(options) {\n    return function grafGalleryToCard(node, builder, {addSection, nodeFinished}) {\n        function isGrafGallery(n) {\n            return n.nodeType === 1 && n.tagName === 'DIV' && n.dataset && n.dataset.paragraphCount && n.querySelectorAll('img').length > 0;\n        }\n\n        if (!isGrafGallery(node)) {\n            return;\n        }\n\n        let payload = {};\n\n        // These galleries exist in multiple divs. Read the images and caption from the first one...\n        let imgs = Array.from(node.querySelectorAll('img'));\n        addFigCaptionToPayload(node, payload, {options});\n\n        // ...and then iterate over any remaining divs until we run out of matches\n        let nextNode = node.nextSibling;\n        while (nextNode && isGrafGallery(nextNode)) {\n            let currentNode = nextNode;\n            imgs = imgs.concat(Array.from(currentNode.querySelectorAll('img')));\n            addFigCaptionToPayload(currentNode, payload, {options});\n            nextNode = currentNode.nextSibling;\n            // remove nodes as we go so that they don't go through the parser\n            currentNode.remove();\n        }\n\n        // Process nodes into the payload\n        payload.images = imgs.map(readGalleryImageAttributesFromNode);\n\n        let cardSection = builder.createCardSection('gallery', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n\nexport function fromSqsGallery(options) {\n    return function sqsGalleriesToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || node.tagName !== 'DIV' || !node.className.match(/sqs-gallery-container/) || node.className.match(/summary-/)) {\n            return;\n        }\n\n        let payload = {};\n\n        // Each image exists twice...\n        // The first image is wrapped in `<noscript>`\n        // The second image contains image dimensions but the src property needs to be taken from `data-src`.\n        let imgs = Array.from(node.querySelectorAll('img.thumb-image'));\n\n        imgs = imgs.map((img) => {\n            if (!img.getAttribute('src')) {\n                if (img.previousSibling.tagName === 'NOSCRIPT' && img.previousSibling.getElementsByTagName('img').length) {\n                    const prevNode = img.previousSibling;\n                    img.setAttribute('src', img.getAttribute('data-src'));\n                    prevNode.remove();\n                } else {\n                    return undefined;\n                }\n            }\n\n            return img;\n        });\n\n        addFigCaptionToPayload(node, payload, {options, selector: '.meta-title'});\n\n        // Process nodes into the payload\n        payload.images = imgs.map(readGalleryImageAttributesFromNode);\n\n        let cardSection = builder.createCardSection('gallery', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n","/* global DOMParser, window */\n\n/**\n * Copied from:\n * https://github.com/TryGhost/Ghost-Admin/blob/1f3d77d7230dd47a7eb5f38b90dfa510b2a16801/lib/koenig-editor/addon/options/parser-plugins.js\n * Which makes use of:\n * https://github.com/TryGhost/Ghost-Admin/blob/1f3d77d7230dd47a7eb5f38b90dfa510b2a16801/lib/koenig-editor/addon/helpers/clean-basic-html.js\n *\n * These functions are used to proces nodes during parsing from DOM -> mobiledoc\n */\n\nimport cleanBasicHtml from '@tryghost/kg-clean-basic-html';\n\nimport * as audioCard from './cards/audio';\nimport * as buttonCard from './cards/button';\nimport * as embedCard from './cards/embed';\nimport * as fileCard from './cards/file';\nimport * as headerCard from './cards/header';\nimport * as htmlCard from './cards/html';\nimport * as imageCard from './cards/image';\nimport * as productCard from './cards/product';\nimport * as softReturn from './cards/softReturn';\nimport * as videoCard from './cards/video';\nimport * as galleryCard from './cards/gallery';\n\nexport function createParserPlugins(_options = {}) {\n    const defaults = {};\n    const options = Object.assign({}, defaults, _options);\n\n    if (!options.createDocument) {\n        const Parser = (typeof DOMParser !== 'undefined' && DOMParser) || (typeof window !== 'undefined' && window.DOMParser);\n\n        if (!Parser) {\n            throw new Error('createParserPlugins() must be passed a `createDocument` function as an option when used in a non-browser environment');\n        }\n\n        options.createDocument = function (html) {\n            const parser = new Parser();\n            return parser.parseFromString(html, 'text/html');\n        };\n    }\n\n    options.cleanBasicHtml = function (html) {\n        return cleanBasicHtml(html, options);\n    };\n\n    // HELPERS -----------------------------------------------------------------\n\n    function _readFigCaptionFromNode(node, payload, selector = 'figcaption') {\n        let figcaptions = Array.from(node.querySelectorAll(selector));\n\n        if (figcaptions.length) {\n            figcaptions.forEach((caption) => {\n                let cleanHtml = options.cleanBasicHtml(caption.innerHTML);\n                payload.caption = payload.caption ? `${payload.caption} / ${cleanHtml}` : cleanHtml;\n                caption.remove(); // cleanup this processed element\n            });\n        }\n    }\n\n    // PLUGINS -----------------------------------------------------------------\n\n    function kgCalloutCardToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || !node.classList.contains('kg-callout-card')) {\n            return;\n        }\n\n        const emojiNode = node.querySelector('.kg-callout-emoji');\n        const htmlNode = node.querySelector('.kg-callout-text');\n\n        const backgroundColor = node.style.backgroundColor || '#F1F3F4';\n\n        let calloutEmoji = '';\n        if (emojiNode) {\n            calloutEmoji = emojiNode.textContent;\n            if (calloutEmoji) {\n                calloutEmoji = calloutEmoji.trim();\n            }\n        }\n\n        let calloutText = htmlNode.innerHTML;\n\n        const payload = {\n            calloutEmoji,\n            calloutText,\n            backgroundColor\n        };\n\n        const cardSection = builder.createCardSection('callout', payload);\n        addSection(cardSection);\n        nodeFinished();\n    }\n\n    function kgToggleCardToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || !node.classList.contains('kg-toggle-card')) {\n            return;\n        }\n\n        const headingNode = node.querySelector('.kg-toggle-heading-text');\n        const contentNode = node.querySelector('.kg-toggle-content');\n\n        let toggleHeading = headingNode.innerHTML;\n        let toggleContent = contentNode.innerText;\n\n        const payload = {\n            heading: toggleHeading,\n            content: toggleContent\n        };\n\n        const cardSection = builder.createCardSection('toggle', payload);\n        addSection(cardSection);\n        nodeFinished();\n    }\n\n    // leading newlines in text nodes will add a space to the beginning of the text\n    // which doesn't render correctly if we're replacing <br> with SoftReturn atoms\n    // after parsing text as markdown to html\n    function removeLeadingNewline(node) {\n        if (node.nodeType !== 3 || node.nodeName !== '#text') {\n            return;\n        }\n\n        node.nodeValue = node.nodeValue.replace(/^\\n/, '');\n    }\n\n    function hrToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || node.tagName !== 'HR') {\n            return;\n        }\n\n        let cardSection = builder.createCardSection('hr');\n        addSection(cardSection);\n        nodeFinished();\n    }\n\n    function figureToCodeCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || node.tagName !== 'FIGURE') {\n            return;\n        }\n\n        let pre = node.querySelector('pre');\n\n        // If this figure doesn't have a pre tag in it\n        if (!pre) {\n            return;\n        }\n\n        let code = pre.querySelector('code');\n        let figcaption = node.querySelector('figcaption');\n\n        // if there's no caption the preCodeToCard plugin will pick it up instead\n        if (!code || !figcaption) {\n            return;\n        }\n\n        let payload = {\n            code: code.textContent\n        };\n\n        _readFigCaptionFromNode(node, payload);\n\n        let preClass = pre.getAttribute('class') || '';\n        let codeClass = code.getAttribute('class') || '';\n        let langRegex = /lang(?:uage)?-(.*?)(?:\\s|$)/i;\n        let languageMatches = preClass.match(langRegex) || codeClass.match(langRegex);\n        if (languageMatches) {\n            payload.language = languageMatches[1].toLowerCase();\n        }\n\n        let cardSection = builder.createCardSection('code', payload);\n        addSection(cardSection);\n        nodeFinished();\n    }\n\n    function preCodeToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || node.tagName !== 'PRE') {\n            return;\n        }\n\n        let [codeElement] = node.children;\n\n        if (codeElement && codeElement.tagName === 'CODE') {\n            let payload = {code: codeElement.textContent};\n\n            let preClass = node.getAttribute('class') || '';\n            let codeClass = codeElement.getAttribute('class') || '';\n            let langRegex = /lang(?:uage)?-(.*?)(?:\\s|$)/i;\n            let languageMatches = preClass.match(langRegex) || codeClass.match(langRegex);\n            if (languageMatches) {\n                payload.language = languageMatches[1].toLowerCase();\n            }\n\n            let cardSection = builder.createCardSection('code', payload);\n            addSection(cardSection);\n            nodeFinished();\n        }\n    }\n\n    function figureScriptToHtmlCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || node.tagName !== 'FIGURE') {\n            return;\n        }\n\n        let script = node.querySelector('script');\n\n        if (!script || !script.src.match(/^https:\\/\\/gist\\.github\\.com/)) {\n            return;\n        }\n\n        let payload = {html: script.outerHTML};\n        let cardSection = builder.createCardSection('html', payload);\n        addSection(cardSection);\n        nodeFinished();\n    }\n\n    // Nested paragraphs in blockquote are currently treated as separate blockquotes,\n    // see [here](https://github.com/bustle/mobiledoc-kit/issues/715). When running migrations,\n    // this is not the desired behaviour and will cause the content to lose the previous semantic.\n    function blockquoteWithChildren(node) {\n        if (node.nodeType !== 1 || node.tagName !== 'BLOCKQUOTE' || node.children.length < 1) {\n            return;\n        }\n\n        const html = [];\n        const children = Array.from(node.children);\n\n        children.forEach((child) => {\n            let nextSibling = child.nextSibling;\n            let previousSibling = child.previousSibling;\n\n            // Only add a soft-break for two sequential paragraphs.\n            // Use the innerHTML only in that case, so Mobiledoc's default behaviour\n            // of creating separate blockquotes doesn't apply.\n            if (child.tagName === 'P' && (nextSibling && nextSibling.tagName === 'P')) {\n                html.push(`${child.innerHTML}<br><br>`);\n            } else if (child.tagName === 'P' && (previousSibling && previousSibling.tagName === 'P')) {\n                html.push(child.innerHTML);\n            } else {\n                html.push(child.outerHTML);\n            }\n        });\n\n        node.innerHTML = html.join('').trim();\n\n        return;\n    }\n\n    // we store alt-style blockquotes as `aside` sections as a workaround\n    // for mobiledoc not allowing arbitrary attributes on markup sections\n    function altBlockquoteToAside(node) {\n        if (node.nodeType !== 1 || node.tagName !== 'BLOCKQUOTE') {\n            return;\n        }\n\n        if (!node.classList.contains('kg-blockquote-alt')) {\n            return;\n        }\n\n        const replacementDoc = options.createDocument(`<aside>${node.innerHTML}</aside>`);\n        const aside = replacementDoc.querySelector('aside');\n\n        // bit of an ugly hack because\n        // 1. node.tagName is readonly so we can't directly change it's type\n        // 2. the node list of the current tree branch is not re-evaluated so removing\n        //    this node, replacing it, or adding a new _sibling_ will not be picked up\n        //\n        // relies on mobiledoc-kit's handling of nested elements picking the\n        // inner-most understandable section element when creating sections\n        node.textContent = '';\n        node.appendChild(aside);\n\n        // let the default parser handle the nested aside node, keeping any formatting\n        return;\n    }\n\n    function tableToHtmlCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || node.tagName !== 'TABLE') {\n            return;\n        }\n\n        if (node.parentNode.tagName === 'TABLE') {\n            return;\n        }\n\n        let payload = {html: node.outerHTML};\n        let cardSection = builder.createCardSection('html', payload);\n        addSection(cardSection);\n        nodeFinished();\n    }\n\n    return [\n        embedCard.fromNFTEmbed(),\n        embedCard.fromMixtape(options),\n        htmlCard.fromKoenigCard(options),\n        buttonCard.fromKoenigCard(options),\n        buttonCard.fromWordpressButton(options),\n        buttonCard.fromSubstackButton(options),\n        kgCalloutCardToCard,\n        kgToggleCardToCard,\n        productCard.fromKoenigCard(options),\n        audioCard.fromKoenigCard(options),\n        videoCard.fromKoenigCard(options),\n        fileCard.fromKoenigCard(options),\n        headerCard.fromKoenigCard(options),\n        blockquoteWithChildren,\n        softReturn.fromBr(options),\n        removeLeadingNewline,\n        galleryCard.fromKoenigCard(options),\n        embedCard.fromFigureBlockquote(options), // I think these can contain images\n        galleryCard.fromGrafGallery(options),\n        galleryCard.fromSqsGallery(options),\n        imageCard.fromFigure(options),\n        imageCard.fromImg(options),\n        hrToCard,\n        figureToCodeCard,\n        preCodeToCard,\n        embedCard.fromFigureIframe(options),\n        embedCard.fromIframe(options), // Process iFrames without figures after ones with\n        figureScriptToHtmlCard,\n        altBlockquoteToAside,\n        tableToHtmlCard\n    ];\n}\n"],"names":["fromKoenigCard","kgAudioCardToCard","node","builder","addSection","nodeFinished","nodeType","classList","contains","titleNode","querySelector","audioNode","thumbnailNode","durationNode","title","innerHTML","trim","audioSrc","src","thumbnailSrc","durationText","payload","minutes","seconds","split","duration","parseInt","e","cardSection","createCardSection","getButtonText","buttonText","textContent","replace","kgButtonCardToCard","alignment","anchor","buttonUrl","href","fromWordpressButton","wordpressButtonToCard","closest","fromSubstackButton","substackButtonToCard","tagName","addFigCaptionToPayload","selector","options","figcaptions","Array","from","querySelectorAll","length","forEach","caption","cleanHtml","cleanBasicHtml","remove","readImageAttributesFromNode","attrs","width","dataset","height","getAttribute","exec","alt","parentNode","_createPayloadForIframe","iframe","match","url","html","outerHTML","fromMixtape","mixtapeEmbed","className","anchorElement","titleElement","descElement","imgElement","description","removeChild","metadata","publisher","style","thumbnail","fromFigureIframe","figureIframeToEmbed","fromIframe","iframeToEmbedCard","fromFigureBlockquote","figureBlockquoteToEmbedCard","blockquote","link","fromNFTEmbed","fromNFTEmbedToEmbedCard","nftCard","JSON","parse","decodeURIComponent","err","contractAddress","tokenId","attr","attributes","contractaddress","tokenaddress","value","tokenid","transformSizeToBytes","sizeStr","sizeVal","sizeType","Number","kgFileCardToCard","captionNode","fileNameNode","fileSizeNode","fileCardLinkNode","fileName","fileSizeStr","fileSrc","fileTitle","fileCaption","fileSize","kgHeaderCardToCard","headerNode","subheaderNode","buttonNode","header","subheader","classes","backgroundImageSrc","buttonEnabled","Boolean","size","sizeClass","find","c","test","styleClass","kgHtmlCardToCard","nodeValue","isHtmlEndComment","n","nextNode","nextSibling","currentNode","push","join","fromImg","imgToCard","fromFigure","figureImgToCard","img","kgClass","grafClass","cardWidth","descriptionNode","productButtonEnabled","productRatingEnabled","productTitle","productDescription","productImageSrc","stars","productStarRating","button","productButton","productUrl","fromBr","fromBrToSoftReturnAtom","addMarkerable","softReturn","createAtom","kgVideoCardToCard","videoNode","videoSrc","loop","readGalleryImageAttributesFromNode","imgNum","image","row","Math","floor","kgGalleryCardToCard","imgs","images","map","fromGrafGallery","grafGalleryToCard","isGrafGallery","paragraphCount","concat","fromSqsGallery","sqsGalleriesToCard","previousSibling","getElementsByTagName","prevNode","setAttribute","undefined","createParserPlugins","_options","defaults","Object","assign","createDocument","Parser","DOMParser","window","Error","parser","parseFromString","_readFigCaptionFromNode","kgCalloutCardToCard","emojiNode","htmlNode","backgroundColor","calloutEmoji","calloutText","kgToggleCardToCard","headingNode","contentNode","toggleHeading","toggleContent","innerText","heading","content","removeLeadingNewline","nodeName","hrToCard","figureToCodeCard","pre","code","figcaption","preClass","codeClass","langRegex","languageMatches","language","toLowerCase","preCodeToCard","codeElement","children","figureScriptToHtmlCard","script","blockquoteWithChildren","child","altBlockquoteToAside","replacementDoc","aside","appendChild","tableToHtmlCard","embedCard","htmlCard","buttonCard","productCard","audioCard","videoCard","fileCard","headerCard","galleryCard","imageCard"],"mappings":"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"}